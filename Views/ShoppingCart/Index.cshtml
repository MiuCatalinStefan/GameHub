@using GameHub.Controllers
@model ShoppingCartDto


<h3 class="text-white mx-3">Shopping Cart</h3>
@if (ViewBag.UserNotLoggedIn == false)
{
    <div class="cart-item m-3" role="alert">
        <h4 class="alert-heading">Login Required!</h4>
        <p>You need to be logged in to view the shopping cart. Please log in to proceed.</p>
        <hr>
        <a class="btn btn-primary btn-lg" href="@Url.Action("Login", "Account")" role="button">Login Here</a>
    </div>
}
else
{
    <div class="container">
        @if (!Model.Products.Any())
        {
            <div class="alert alert-info text-center">Your shopping cart is empty!</div>
        }
        else
        {
            <div class="row">
                <div class="col-md-8">
                    @foreach (var obj in Model.Products)
                    {
                        <div class="cart-item">
                            <div class="item-details d-flex justify-content-between align-items-center m-2">
                                @if (obj.Image != null)
                                {
                                    <img src="@obj.Image" alt="@obj.ProductName" class="item-image">
                                }
                                else{
                                    <img src="~/404.png" alt="@obj.ProductName" class="item-image">
                                    }
                                    <div class="item-name">
                                    <h5>@obj.ProductName</h5>
                                    <p>@obj.Description</p>
                                </div>
                                <div class="quantity-controls mr-4">
                                    <button class="btn btn-link text-white" onclick="changeQuantity('@obj.ProductId', false)">-</button>
                                    <span>@obj.Quantity</span>
                                    <button class="btn btn-link text-white" onclick="changeQuantity('@obj.ProductId', true)">+</button>

                                </div>
                                <div class="mr-2">
                                    <button class="btn btn-link text-white p-0" onclick="deleteProduct('@obj.ProductId')">
                                        <i class="far fa-trash-alt"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="d-flex justify-content-end align-items-center mt-3">
                                <div class="price mr-2">
                                    <h5>@((obj.Price * obj.Quantity).ToString("c"))</h5>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="col-md-4">
                    <div class="cart-summary">
                        <h4>Summary</h4>
                        <div class="mb-2 ">
                            <span> Product</span>
                            <span class="float-right">@Model.TotalPrice.ToString("c")</span>
                        </div>
                        <div class="mb-3">
                            <span>Total:</span>
                            <span class="float-right">@Model.TotalPrice.ToString("c")</span>
                        </div>
                        <a class="btn btn-block" asp-action="Checkout">Proceed to checkout</a>
                    </div>
                </div>
            </div>
        }
    </div>

}

<!-- Optional: Include Bootstrap JS and its dependencies (if not already included in your layout) -->
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
<script>
    var increaseQuantityUrl = '@Url.Action("IncreaseQuantity", "ShoppingCart")';
    var decreaseQuantityUrl = '@Url.Action("DecreaseQuantity", "ShoppingCart")';

    function changeQuantity(productId, increase) {
        var url = increase ? increaseQuantityUrl : decreaseQuantityUrl;

        $.ajax({
            url: url + '?productId=' + productId,
            type: 'GET', 
            success: function (response) {
                console.log("Quantity updated");
                location.reload();
            },
            error: function (xhr, status, error) {
                console.error("Error updating quantity");
            }
        });
    }

    var deleteProductUrl = '@Url.Action("DeleteProduct", "ShoppingCart")';

    function deleteProduct(productId) {
        $.ajax({
            url: deleteProductUrl + '?productId=' + productId,
            type: 'GET', 
            success: function (response) {
                console.log("Product deleted");
                location.reload();
            },
            error: function (xhr, status, error) {
                console.error("Error deleting product");
            }
        });
    }
</script>